# CONCEPTS
# ---------------------- 
server manages all sessions
session has windows
windows has panes
each pane is a separate terminal

A client displays the session


Help C-b ?
----------------------------------------------------------------------
-T means Key-table

        C-b                key           the command that will be executed
---------------------      ---           ---------------------------------
bind-key    -T prefix       9                 select-window -t :=9




# SESSIONS 
# ---------------------- 
tmux new -s mysess                  # start new 
tmux kill-session -t mysess         # kill named 
tmux a -t mysess                    # attach to named 
tmux a -d -t mysess                 # detach all other sessions when attaching
tmux ls                             # list

C-b d                               # detach from current session
C-b D                               # select and detach
C-b s                               # list all sessions


# WINDOWS
# ----------------------
C-b c           new window
C-b 1           swith to window 1
C-b w           choose from a list
C-b &           close window
C-b ,           rename window
C-b l           last window

:swap-window -s 3 -t 1          swap windows 3 and 1
:swap-window -t 0               swap current window with the top window
C-b .RT                         move current window to session "RT"

Turn window into a pane (make window 2 a pane of window 1)
join-pane -s 2 -t 1


# PANES
# ----------------------
C-b "                       # split horizontal
C-b %                       # split vertical
C-b z                       # toggles zoom pane
C-b ;                       # previously active pane
C-b o                       # next pane
C-b x                       # delete pane
C-b : resize-pane -U 20     # Resize the current pane up by 20 cells
C-b : resize-pane -D 20     # Resize the current pane down by 20 cells
C-b }                       # Swap panes
C-b M <up,down,righ,left>   # Resize pane in steps of 1 cell (M=meta or Option in macos)

Make current pane its own window (break pane)
C-b !

Swith to predefined layout, M1 is Meta + 1 or Option + 1 in macos
This requires configureing Options key to Esc+ in iterm2 profile 
C-b M1    
C-b M2    

swap-pane -s {left}
swap current pane with the left most
(by default the target pane '-t' option is the current pane)  pane.


# Refresh after config change
tmux source-file .tmux.conf


# COPY PASTE
# ------------------------
DEFAULT Key bindings
[               Enter copy mode
Ctrl+Spc        Start Copying
Arrow keys      move/extend selection
Ctrl+w          copy into tmux buffer
]               paste
=               Choose buffer to paste

In copy mode
Ctrl+s          search
Ctrl+r          reverse search
PgUp (fn+up)    page up
PgDown (fn+dn)  page down

In selection mode
Ctrl+n          select next line
Ctrl+p          select previous line
Arrow keys      select up down




# OTHER
# ------------------------
Ctrl-b :        command mode eg. C-b : kill-session
Ctrl-b ?        help
Ctrl-b r        redraw 


# Example configuration
/usr/local/opt/tmux/share/tmux

# Bash completion
/usr/local/etc/bash_completion.d



# LOAD CONFIGRATION
#-----------------------------
tmux source-file ~/.tmux.conf
C-b : source ~/.tmux.conf

commands can be separated by ";" example:
bind r source ~/.tmux.conf; display "source file loaded"

# Aliases
# -------------------------
bind-key            bind 
new-session         new  
set-window-option   setw 
set-option          set  
run-shell           run  
send-keys           send 



# OPTIONS
#------------------------------
set-option              set     session option
set-option -p           setp    pane option
set-option -w           setw    window option   (ie apply to all panes inside this window)
set-option -s           sets    server option
set-option -g           setg    global session or window option

set -g <option>                   set global server option
set -w window-style bg=red        set window option
setw -q @foo "abc123"             set user option: like a variable: 
showw -v @foo                     show window option

show-option -s [option]           show server option
show-option -gw [option]          show global window option

set-option -wu <option>           unset window option
set-option -pu <option>           unset pane option
set-option -su <option>           unset server option

Interesting server options:
Interesting session options:
    renumber-windows on
Interesting window options:
Interesting pane options:


Command prompt
command-prompt -p "text to display" "command to execute '%%'"




# CLIPBOARD
#-------------------------------
inside tmux, verify following two options
tmux show-option -s
set-clipboard on
terminal-overrides "xterm*:XT:Ms=\E]52;%p1%s;%p2%s\007...

outside tmux
tmux show-option -s
set-clipboard on
terminal-overrides[0] "xterm*:XT:Ms=\\E]52;%p1%s;%p2%s\\007...


# TWO SERVERS
#-------------------------------
tmux -L FW -f ~/.tmux.nocolor.conf new -s left
tmux -L FW a -t left
tmux -L FW ls


# BASIC SETTINGS FOR TMUX
-------------------------
unbind C-b
set-option -g prefix `
bind-key `  send-prefix

set -g base-index 1                      # pane numbers start from 1
setw -g window-status-current-bg yellow  # active pane tab color
set -g default-terminal "tmux-256color"  # so that solarized theme for vi can work properly

bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right


# Oh-my-tmux
-------------------------
# components to be included on the status bar
tmux_conf_theme_status_right        # list components from left to right
tmux_conf_theme_status_right        

#{hostname}                         # builtin ohmytmux variable, see help 
#()                                 # call an external command
#I                                  # tmux window number
#W                                  # tmux window name



# Appearence
# -------------------------
pane-active-border-style        : Pane border style for the currently active pane.  
pane-border-style style         : Pane border style for panes aside from the active pane

window-status-current-style     : status line style for the currently active window.
window-status-last-style        : status line style for the last active window.

window-style style              : Set the pane style.
window-active-style style       : Set the pane style when it is the active pane. 

window-status-format string     : format in which the window is displayed in the status line window list.
window-status-current-format    : format used when the window is the current window.

status-left                     : content of left side use #S 
status-left-style               : colors of left side


FORMATS
#H  Hostname of local host
#h  Hostname without domain
#D  Pane id
#P  Pane index
#T  Pane title
#S  Session name
#F  Window flags e.g. '*', '-' etc.
#W  Window name
#I  Window index

# Show
# -------------------------
# Finding your current status line settings
tmux show-options -g | grep status

# show all options
tmux show-option -g

# show all window options
tmux show-option -gw

C-b q       pane index




# bind-key
# -------------------------
* when -T is omitted 'prefix' table is assumed
* -n same as -Troot
* -r key can repeat;
bind-key -T prefix          # defalut table, invoked by prefix key C-b
bind-key -T root            # keys invoked without the prefix key
bind-key -T copy-mode-vi    # keys invoked in vi copy mode




Get info
# -------------------------
get pane id of current pane
tmux display -pt "${TMUX_PANE:?}" '#{pane_index}'

save new pane id in bash var
bash_var=$(tmux split-window -P -F "#{pane_id}")

print window name on console
tmux display-message -p '#{window_name}




A script for inspiration
----------------------------------------------------------------------
#!/bin/sh
SESSION=$1
set -- $(stty size) # $1 = rows $2 = columns
tmux -2 new-session -d -s "$SESSION" -x "$2" -y "$(($1 - 1))"
tmux split-window -v
tmux resize-pane -D 15
tmux -2 attach-session -d







Solution for 
No entry for terminal type "tmux-256color";
using dumb terminal settings.
----------------------------------------------------------------------
export TERM=screen-256color



TO LEARN
----------------------------------------------------------------------
Additionally, the new-window, new-session, split-window, respawn-window and respawn-pane commands allow shell-command to
     be given as multiple arguments and executed directly (without ‘sh -c’).  This can avoid issues with shell quoting.  For
     example:

           $ tmux new-window vi /etc/passwd

