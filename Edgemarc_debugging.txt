e:! /bin/sh

# Replay
# ------
# SETUP
  ptop
  export HOST_DEBUG=1
  export EXTRA_DEFINES=-DEWN_REPLAY
  make -C libewn clean all && make -C mand clean all
  cd -

# UNSET
  ptop
  export HOST_DEBUG=1
  unset EXTRA_DEFINES
  make -C libewn clean all && make -C mand clean all
  cd -


mand replay
------------------------
- doing Replay
  # put replay.cfg, lan.pcap and wan.pcap in bug_XXX directory 
  replay_local -m 1 /home/aawais/workspace/bug_XXX
  # if there is only one pcap file
  replay_local -m 0x9 -l lan.pcap -w "" /home/aawais/tmp


- for replay with packet timing
  ./mand -m 1
  other options see:
  ./mand -t

- When replay does not work (in older builds)
  echo "FILE:/etc/config/mand.reg" >> ~/tmp/replay.cfg
  echo "kQjHe-iCap2-PhCik-hFGGG-KnBjH" >> ~/tmp/replay.cfg 

- /etc/config for replay
  #define REPLAY_CONFIG_DIR   "/tmp/replayconf/" in common_gui.h
  replayconf is deleted at the end of replay to keep it 
  comment out the line in replay_DoneConfig() in Replay.cpp


Nightly replay tests
------------------------------------
# Running all replay tests:
  export EWN_SUPPRESSIONS=/usr/local/BatchReplay/BatchReplay_Main/valgrind.suppression
  batch_replay -cv /usr/local/BatchReplay/BatchReplay_Main/batch_tests > testoutput.txt

# Running a subset of tests
  cp /usr/local/BatchReplay/BatchReplay_912x/batch_tests ~/tmp
  edit ~/tmp/batch_tests, remove unwanted tests
  batch_replay -cv -p /usr/local/BatchReplay/BatchReplay_912x ~/tmp/batch_tests

# Running a specific test
  replay  /usr/local/BatchReplay/BatchReplay_Main/EP/EP.comp

# Updating reference files
  replay -u /usr/local/BatchReplay/BatchReplay_Main/EP/EP.comp

# Updating asterisk reference files
  replay_my -u  /usr/local/BatchReplay/BatchReplay_88x/AstExt/ast6.play

# get all test files from devtest@10.10.10.60
  sudo HOME=/home/aawais $HOME/project/bin/batch_replay -s

# update files on devtest, Leave files that are newer in dest.
  rsync -avu  --no-o --no-g /usr/local/BatchReplay/BatchReplay_Main/AstExt/ast6/ \
      devtest@10.10.10.60:/usr/local/BatchReplay/BatchReplay_Main/AstExt/ast6/ 
  
# update local test files
  rsync -avu --no-o --no-g --delete devtest@10.10.10.60:/usr/local/BatchReplay/BatchReplay_912x/ \
      /usr/local/BatchReplay/BatchReplay_912x/

# update local valgrind suppressions
  rsync -vu --no-o --no-g  devtest@10.10.10.60:~/valgrind.suppression \
      /home/aawais/attic


# RUNNING REPLAY ON DEVTEST MACHINE: 10.10.10.60
-----------------------------------------------------
# General batch_replay syntax 
batch_replay -r -v -n <branch> -b <build_dir> 
/usr/local/BatchReplay/BatchReplay_<branch>/batch_tests

# Rebuild everything on branch ver_1_1_br and run all tests
batch_replay -r -v -n ver_1_1_br -b /home/devtest/build/Replay_ver_1_1_br \
/usr/local/BatchReplay/BatchReplay_ver_1_1_br/batch_tests

# Run all tests on branch ver_1_1_br 
batch_replay -v -b /home/devtest/build/Replay_ver_1_1_br \
/usr/local/BatchReplay/BatchReplay_ver_1_1_br/batch_tests

# Run a single test
export BUILDDIR=$HOME/build/Replay_<branch>
export PTOP=$BUILDDIR/e30
export OSTOP=$BUILDDIR/snapgear
export LD_LIBRARY_PATH=$PTOP/mand/dnscache/lib:$OSTOP/lib/libssl:$LD_LIBRARY_PATH:$OSTOP/lib/libewn/
replay -qv /usr/local/BatchReplay/BatchReplay_ver_14_2_0_feature_br/SIP_A/sip_1.comp



Manually setting IP of asterisk in host debug
---------------------------------------------
# in cfg_surv.c:
  s_localSoftSwitchAddrStr = "192.168.1.190";
  ip_str2addr(s_localSoftSwitchAddrStr, 6050, &s_localSoftSwitchAddr);
  IPBUF1;
  MAND_LOG(DBG_SIP, "Asterisk Address: %s", IP2STR1(&s_localSoftSwitchAddr,1));



Compile boa on host
------------------
add the following at the top of Makefile (snapgear/user/boa/src/Makefile)

############################################################################
CC=i686-linux-gcc
CFLAGS+=-g -fno-builtin -Dlinux -D__linux__ -Dunix -DEMBED -nostdinc
CFLAGS+= -I$(OSTOP)/lib/glibc/build/include
CFLAGS+= -idirafter /usr/local/i686-linux/lib/gcc-lib/i686-linux/3.2.3/include
CFLAGS+= -I$(OSTOP)/lib/glibc/build/include
CFLAGS+= -I$(OSTOP)
CFLAGS+= -I$(OSTOP)/linux-2.4.x/include
CFLAGS+= -I$(OSTOP)/lib/libssl/include
CFLAGS+= -DSERVER_SSL=1 -DCONFIG_USER_FLATFSD_FLATFSD=1 -DOLD_CONFIG_PASSWORDS
CFLAGS+= -I$(OSTOP)/lib/libcrypt_old

LDFLAGS+= -L$(OSTOP)/lib/libssl
LDFLAGS+= -L$(OSTOP)/lib/libcrypt_old

LDLIBS+= -lssl -lcrypto -lcrypt_old -nodefaultlibs -lc -lgcc
############################################################################


# Starting Boa
# ------------
sudo /bin/boa -c /home/httpd &


# Gateway PRI on a 4500  (Client side PRI)
# i.e., connection for the PSTN line from the CO
# -----------------------------------------------
page=85



Debug FXO/FXS GUI on host
---------------------------
# 4500
echo "PLATFORM=E_4500" > /etc/platform
sudo sh -c "cat << END > /var/ewn_model
EWN_MODEL=4508T4
MODEL_FXS_PORTS=6
MODEL_FXO_PORTS=2
END"

#4552
echo "PLATFORM=E_4600" > /etc/platform
sudo sh -c "cat << END > /var/ewn_model
EWN_MODEL=4552
EWN_IMAGE_NAME=4600
MODEL_T1_PORTS=4
MODEL_USB_ETH_DEV=off
MODEL_FXS_PORTS=4
END"

# 4601
echo "PLATFORM=E_4600" > /etc/platform
sudo sh -c "cat << END > /var/ewn_model
EWN_MODEL=4601
MODEL_T1_PORTS=4
MODEL_HAS_DSP=on
END"

# 5300LF2
echo "PLATFORM=E_5300LF2" > /etc/platform
sudo sh -c "cat << END > /var/ewn_model
EWN_MODEL=5300LF2
EWN_IMAGE_NAME=5300lf2
MODEL_IS_X86=on
MODEL_HAS_LANGIGE=on
MODEL_HAS_WANGIGE=on
END"

# 5300 | 5300LF 
echo "PLATFORM=E_5300" > /etc/platform
sudo sh -c "cat << END > /var/ewn_model
EWN_MODEL=5300
EWN_IMAGE_NAME=5300
MODEL_IS_X86=on
END"

for more detail see: $PTOP/config/bin/config_model.sh



Enable SIP UA in GUI
--------------------
cd $PTOP/cgi/src
export CONFIG_USER_EDGEWATER_SIPUA=1
make clean all



GUI debug options
--------------------
- debugging a GET
  -q page=139
  -q phelp=101

- debugging a POST
  -p /home/aawais/tmp/post.txt

- debug initial page load
  138


GUI debug License page
----------------------
# make config use current mand binary instead of /usr/local/bin/mand 
export EXTRA_DEFINES=-DMAND_PATH='\"${PTOP}/mand\"'


Automatically stop mandlog as soon as tinfo is there
----------------------------------------------------
(while [ ! -e  /var/mand/tinfo ] ; do sleep 3; done; mandctl log 0)& mandctl log 0x9 




Debugger step into libraries
-----------------------------
ostop
export CONFIG_LIB_DEBUG=1
make lib_only




tinfo addresses
----------------
[0x40032a18] (null) (+0x0)
[0x00153d2c] liblog_Log (+0x58)
[0x00154770] net_dev_list (+0x9c)

1. call was made from address:0x154770 which is 0x9c from the start of net_dev_list
2. call was made from address:0x153d2c which is 0x58 from the start of liblog_Log

to get start address of liblog_Log do:
nm mand.symbols | grep liblog_Log


disassembly
------------
nm mand.symbols --demangle | grep B2BUA::Request::create
hexadd.sh a b
objdump mand.symbols -SC --start-address=0x100c4728 --stop-address=0x100c49c9 --no-show-raw-insn

Architechtures
--------------
powerpc-linux-
arm-linux-



Notes:
----------------------------
- To get source code in objdump
  export EXTRA_DEFINES=-g
  make clean
  make

- objdump --syms == nm
- other binary tools
  readelf
  size

- arm specific
  r13 = sp (stack pinter)                                   
  r14 = lr (link register, return address for a subroutine) 
  r15 = pc (program counter)                                



# ---------------------------------------------------------------
# CVC Cablevision Debugging
# ---------------------------------------------------------------

# CVC autoconf debugging
export CVC_CONFIG_DEBUG=on
/etc/autocfg_cvc/autocfg_cvc_impl
cat /var/tmp/wget.log

# Point EM to a local server for CVC configuration 
cat /etc/config/autocfg_cvc.conf | grep -v "CVC_URL" > /var/autocfg_cvc.conf
echo "CVC_URL=\"http://10.10.10.190/cgi-bin/cvc_config.py\
?MA=\$MAU_E1&SWVER=\$SWVER&SN=\$SN&MODEL=\$PN\"" >> /var/autocfg_cvc.conf
echo "WGET_OPTIONS='--user=root --password=default'" >> /var/autocfg_cvc.conf
mv /var/autocfg_cvc.conf /etc/config/autocfg_cvc.conf


# GUI
sudo sh -c "echo \"VENDOR=CVC\" > /etc/vendor"
login: cvtech  pwd: welc0me1



# ---------------------------------------------------------------
# B2BUA Registration
# ---------------------------------------------------------------

#setup registercore with a different registrar than the default SIP Proxy
* 2100 usr=6316769607 a-usr=6316769607 pass=passABC reg=1 exp=3600 mexp=50 dm=10.10.10.80:5090



# ---------------------------------------------------------------
# SOFT DSP
# ---------------------------------------------------------------

# Debug soft dsp in host debug build
export CONFIG_LIB_SOFT_DSP=1
make







# ---------------------------------------------------------------
# Serial Port Baud rate
# ---------------------------------------------------------------

250: 11520
All other platforms: 9600



# ---------------------------------------------------------------
# Copy mand to ramdisk
# ---------------------------------------------------------------

# create a ram disk
mkdir /var/ramdisk
/bin/mount -t tmpfs tmpfs /var/ramdisk -o size=100M

# set option="kill"
cat /etc/config/alg_defs.conf | grep -v "OPTION" > /var/alg_defs.conf
echo "OPTION=\"KILL\"" >> /var/alg_defs.conf
mv /var/alg_defs.conf /etc/config
killall mand

# copy mand
scp mand root@192.168.1.71:/var/ramdisk
# or
scp aawais@10.10.11.31:~/project/4600_tt/e30/mand/mand /var/ramdisk


# ---------------------------------------------------------------
# Mount USB disk
# ---------------------------------------------------------------

#460x
/etc/usb.sh


# ---------------------------------------------------------------
# open wan firewall on EM for http
# ---------------------------------------------------------------

iptables -t filter -A INETIN -p tcp --dport 80 -j TCPACCEPT

# old delete when the above is sufficient
iptables -t filter -I INPUT -p tcp --dport 80 -j ACCEPT



# ---------------------------------------------------------------
# ipv6
# ---------------------------------------------------------------

$OSTOP/config/.config:
    CONFIG_USER_EDGEWATER_IPV6=y
ipv6.conf
    IPV6_ENABLED=on
sudo sh -c "echo \"VENDOR=EWN\" > /etc/vendor"


# To disable ipv6 IPV6_ENABLED must be set to off becasue
# otherwise it defaults to on.
echo "IPV6_ENABLED=off" >> ipv6.conf

   


# ---------------------------------------------------------------
# osip trace 
# ---------------------------------------------------------------

pushd
cd $PTOP
export EXTRA_DEFINES=-DENABLE_TRACE
make -C mand clean all
popd




# ---------------------------------------------------------------
# Run asterisk on host
# ---------------------------------------------------------------

# COMPILE:
cd $OSTOP/user/asterisk/editline
./configure
patch Makefile << 'End-Of-Patch'
@@ -5,8 +5,10 @@
 
 SHELL = /bin/sh
 
-UCLINUX_BUILD_USER=1
-include $(PTOP)/build/build.$(ENARCH)
+ifndef UCLINUX_BUILD_USER
+  UCLINUX_BUILD_USER=1
+  include $(PTOP)/build/build.$(ENARCH)
+endif
 
 #CC = ucfront-gcc powerpc-linux-gcc -mbig-endian
 #AR = /usr/bin/ar
End-Of-Patch

cd ..
make UCLINUX_BUILD_USER=1 RANLIB=ranlib

# CONFIGURE:
sudo sh -c "cat << END > /var/asterisk/asterisk.conf
[directories]
astetcdir => /var/asterisk
END"

# RUN:
cd $OSTOP/user/asterisk
sudo ./asterisk -cvvvvv -C /var/asterisk/asterisk.conf





# ---------------------------------------------------------------
# Stateful Failover
# ---------------------------------------------------------------

check: $OSTOP/config/.config : 
    CONFIG_USER_EDGEWATER_FAILOVER=y
mand/Makefle: 
    EWN_FAILOVER_ENABLED
failover_defs.conf:
    FAIL_ENABLE=on
    FAIL_ID=1
    FAIL_REMOTE_ADDR1=192.168.1.193
    FAIL_REMOTE_STATE_ADDR1=on

# set master 
sudo sh -c "echo \"4 hello 0\" > /var/run/failover.status"


# prevent auto-run for manual run
/etc/config/failover_options
    FAIL_NO_AUTORUN=1

    




# ---------------------------------------------------------------
# PRI Local Mode DID mapping testing
# ---------------------------------------------------------------

setvalue local_defs.conf ENABLE_PRIDID_LOCALTN_MAPPING on
setvalue sipgw_defs.conf ENABLE_SIPGW on
setvalue sipgw_pri_defs.conf ENABLE_SIPGW_PRI on

cat << END_MARK > pridid_localtn_map.conf
LMODE_NUM_MAP_ENTRIES=4
LMODE_PRIDID_1=4445551000
LMODE_LOCALTN_1=3335553333
LMODE_PRIDID_2=4445552000
LMODE_LOCALTN_2=3335550002
LMODE_PRIDID_3=4445553000
LMODE_LOCALTN_3=3335550003
LMODE_PRIDID_4=4445554000
LMODE_LOCALTN_4=3335550004
END_MARK


# ---------------------------------------------------------------
# Core dump
# ---------------------------------------------------------------

# Compile mand with debug symbols
export EXTRA_DEFINES="-g -ggdb"
make

# EM setup
echo "core-dump=on" >> /etc/config/mand.conf
echo "core-dump-path=/var/ramdisk" >> /etc/config/mand.conf
cfg_commit
mkdir /var/ramdisk
/bin/mount -t tmpfs tmpfs /var/ramdisk -o size=100M

# Get coredump file
scp root@192.168.1.71:/var/ramdisk/mandcore.gz .
gunzip mandcore.gz

# host setup
cd $OSTOP/romfs/lib
ln -fs ld-2.2.5.so ld.so.1
ln -fs libqDecoder.so.2 libqDecoder.so
ln -fs libghthash.so.2.0.1 libghthash.so.2

# gdb setup
set sysroot $OSTOP/romfs
file ./mand.symbols
core-file ./mandcore

# Analyze
bt
bt full


# ---------------------------------------------------------------
#                           Host Debug
# ---------------------------------------------------------------

# Setup
# 1. Set Key in /etc/config/mand.reg
mand_set_key J5jFG-i3JJH-PHEGk-dCkEf-CQDfc

# 2. Setup mand.conf
cat << END_INPUT > mand.conf
private-ip=192.168.1.194
public-ip=10.10.10.34
public-ip6=
public-netmask=255.255.255.0
public-gateway=10.10.10.1
landevice=eth0
wandevice=eth1
max-wan-rtp=
END_INPUT

# 3. Configure ip.conf
sed -i -e 's/\(LAN_IP\)=.*/\1=192.168.1.194/; 
s/\(LAN_SUBNET\)=.*/\1=255.255.255.0/;
s/\(WAN_IP\)=.*/\1=10.10.10.34/;
s/\(WAN_SUBNET\)=.*/\1=255.255.255.0/;
s/\(GATEWAY_IP\)=.*/\1=10.10.10.1/;
' ip.conf

# 4. Calibration file:
sudo cp $PTOP/snapgear-3.3.0/lib/psi_src-3.3.5/g722.ecf /etc/psy/g722.ecf


# ---------------------------------------------------------------
#                         MAND ADD CLIENTS
# ---------------------------------------------------------------

PREFIX=440444 
NUMCLIENTS=8000 
SUFFIX=1000 
IPADDR=1.1.1.175 
ITER=0 
mandctl client sip clear
while [ $ITER -lt $NUMCLIENTS ]; do 
    mandctl client sip add $PREFIX$SUFFIX $IPADDR 5060 
    echo $PREFIX$SUFFIX
    let SUFFIX=SUFFIX+1
    let ITER=ITER+1 
done



# ---------------------------------------------------------------
#                         UPGRADE FIRMWARE
# ---------------------------------------------------------------

# Non x86
netflash -fkiH 10.10.50.156 pub/e_4600/image.bin.e4600.ewn.aawais.2010-09-28-135544
   

# x86:
echo 'default login anonymous password etap@edgewaternetworks.com' > /etc/config/.netrc
config_upgrade 192.168.1.194 eflash.bin.e7000.ewn.13.11.2RC3.aaw.015
cat /var/upgrade.log


# ---------------------------------------------------------------
#                       SERIAL PORT BAUD RATE       
# ---------------------------------------------------------------
4552    9600        8 bit, No parity, 1 stop bit
4571    9600        8 bit, No parity, 1 stop bit
4300    9600        8 bit, No parity, 1 stop bit
4500    9600        8 bit, No parity, 1 stop bit
250     115200      8 bit, No parity, 1 stop bit



# ---------------------------------------------------------------
#                             USING VI
# ---------------------------------------------------------------
set screen size to 80x24

# ---------------------------------------------------------------
#                    USING A SPECIFIC LIBRARY
# ---------------------------------------------------------------
sudo LD_LIBRARY_PATH=/home/aawais/project/host_tt/snapgear/lib/libnl-1.1/lib
NLDBG=7 ./mand -t 0x29 2>&1 | tee mandlog.mlog
