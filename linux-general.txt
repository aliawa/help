#!/bash/bin

at:
    at now + 4 minutes  (hours,days,weeks)
    at HH:MM
    at midnight (noon,teatime)
    at 4PM
    at july 4
    at MMDD[CC]YY (MM/DD/[CC]YY, DD.MM.[CC]YY, [CC]YY-MM-DD)
    at tomorrow 16:00


MTAs for linux (Mail Transfer agent):
    These are needed for local mail delivery (cron, log watch). Thunderbird doesn't
    need them.
    sendmail
    postfix
    exim


mail command line
    send mail to  receipient@domin from sender@domain
    mail -r sender@domain -s "Subject of email" receipient@domain


# SHOW AND KILL PROCESSES THAT ARE USING A DEVICE:
fuser -m /dev/sdb1
ps auxw | grep <process_number>
killall <process>

Also kill "all" processes using sdb1
fuser -k /dev/sdb1



# runlevel
 current runlevel: who -r
 Alt: runlevel
 change runlevel: init 3




# Colored man pages (solarized)
export LESS_TERMCAP_mb=$'\E[01;31m'       # begin blinking
export LESS_TERMCAP_md=$'\E[01;38;5;74m'  # begin bold
export LESS_TERMCAP_me=$'\E[0m'           # end mode
export LESS_TERMCAP_se=$'\E[0m'           # end standout-mode
export LESS_TERMCAP_ue=$'\E[0m'           # end underline
export LESS_TERMCAP_us=$'\E[04;38;5;146m' # begin underline
export LESS_TERMCAP_so=$'\E[01;35;47m'    # standout statusbar/search -> magenta


# Users
# -------------------------------------------------
# add user 
# NOTE useradd is the backend for adduser
adduser aawais

# add to sudo group
usermod -aG sudo aawais

# check
id [username]

# delete user
deluser --remove-all-files

# users groups
groups [username]




# Setup
# -------------------------------------------------

# When /boot is full 
# --> section Troubleshooting in apt-get.txt
# --> section Fixing ubuntu boot problems in apt-get.txt
# --> section Manually remove old linux kernels

# 1. add user "aawais". Follow the interactive prompts
adduser aawais 

visudo 
# Add after root ALL=(ALL:ALL)ALL
aawais ALL= (root) NOPASSWD: ALL

# basic setup
apt-get install git
git clone https://github.com/aliawa/dotfiles.git
git clone https://github.com/aliawa/bin.git

# vim setup
mkdir -p ~/.vim/autoload ~/.vim/bundle && \
curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim

mkdir -p $HOME/.vim/bundle && cd $HOME/.vim/bundle
git clone https://github.com/altercation/vim-colors-solarized.git 
git clone https://github.com/itchyny/lightline.vim.git 
git clone https://github.com/majutsushi/tagbar.git


# For sipp build install 
apt-get install libncurses5-dev libncursesw5-dev
apt-get install libssl-dev
apt-get install libpcap-dev


# enable sudo
visudo
copy line "root ALL=(ALL:ALL)ALL
change root to aawais


# change your login shell
chsh -s /bin/bash aawais


# locale removal
# -------------------------------------------------------
1. delete everything under /usr/lib/locale
2. Delete unneded locale from /etc/default/locale
3. Delete unneded locale from /var/lib/locales/supported.d/*
4. Regenerate locales locale-gen --purge



# Switching Theme
# -------------------------------------------------------
1. Use Dev_Light profile for iTerm2
2. vimrc -> set background=light (or press F5 in vim)
3. . ~/.light_bash_prompt


# Free up disk space
# -------------------------------------------------------

1. sudo du -hsx /* | sort -rh | head -n 40
   to see where all the disk space is going.

2. /boot/initrd.img* can be deleted.
   sudo update-initramfs -d -k $VER-generic
   then regenerate for current kernel: sudo update-initramfs -c -k all

3. Everything in /var/tmp and tmp can be deleted.
   deletes files older than 10 days.
   sudo find /var/tmp -atime +10 -exec rm -rf "{}" \;
   sudo find /tmp -atime +10 -exec rm -rf "{}" \;

4. See who is using files in a directory to make sure safe to delete.
   lsof -Pn +D /var/cache/ | awk '{print $1}' | sort | uniq

5. Files in /var/cache can be deleted.
   sudo find /var/cache -type f -atime +10 -delete

6. Configure the temporary files rotation in /usr/lib/tmpfiles.d/tmp.conf
   by specifying the "Age" field.

7. /var/log
  sudo find /var/log -atime +7 -exec rm -rf "{}" \;

8. /var/crash
   /var/core
   Delete files here if not needed


Ubuntu 18.04 setup
--------------------------------------------------------
network:
edit /etc/netplan/50-cloud-init.yaml



Reset password in ubuntu VM 
-------------------------------------------------------
vsphere: right-click-> Edit settings -> VM Options -> Boot Options -> Boot Delay
boot -> launch web console -> Press Esc
select "Advanced options for Ubuntu" on grub and go to recovery mode.
Drop to root shell prompt

mount -o rw,remount /
ls /home
passwd username


# Check your powerline fonts
---------------------------------------------------------
echo "\ue0b0 \ue0b1 \ue0b2 \ue0b3"   


# install gtags locally
---------------------------------------------------------
curl -O https://invisible-island.net/datafiles/release/ncurses.tar.gz
./configure --prefix=/home/aawais/bin --without-debug
make
make install

curl -O https://ftp.gnu.org/pub/gnu/global/global-6.6.tar.gz
export CFLAGS="-I/home/aawais/bin/include/ncurses -I/home/aawais/bin/include"
./configure --prefix=/home/aawais/bin --with-ncurses=/home/aawais
make
make install


# --------------------------------------------------------
# Unix Text tools
# --------------------------------------------------------

# check line ending
cat -vE file
output: what isgoingon^M$

od -c file
output:
0000000   w   h   a   t       i   s   g   o   i   n   g   o   n  \r  \n
0000020



# --------------------------------------------------------
# Misc tools
# --------------------------------------------------------

ufw         program for managing a Netfilter firewall
xz-utils    XZ-format compression utilities

# Network
wireplay    reads pcap but only uses the payload to replay.
ssmping     check your multicast connectivity

# Conversions
pandoc      All text format conversion needs
sox         Swiss army knife of sound processing

# Network statistics
ipt-netflow + flowd
ipt-netflow + flow-tools
fprobe + ntop

bpython:    a better python interpretter
videotop    download youtube videos
hachoir     examine binary files
pudb        python debugger
midnight commander


