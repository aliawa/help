locate openssl.cnf
make sure OPENSSLDIR points to the directory containing openssl.cnf
modify value of "dir" in openssl.cnf to point to demoCA


1. Create certificate Authority
---------------------------------
makeCA
	creates:
	dir: demoCA
	CA certificate: demoCA/cacert.pem
	CA certificate in PKC#7 format: demoCA/cacert.p7clo
	


2. Create certificate for the host
----------------------------------
makeCert <host.example.net> [No_of_days]
	creates:
	private key in: domain_key_host.example.net.pem
	certificate in: domain_cert_host.example.net.pem
	private key and certificate combined in PKCS12 format: host.example.net.p12	

Notes:
--------
- if you execute "makeCert 10.10.13.182" the script will think that
the first "10" is the host name, to prevent this edit the script first.
For example: add a line ALTNAME="URI:${ADDR}" and comment out the portion
that assigns a value to ALTNAME.

- To see the contents of the certificate in plain text use
openssl x509 -text -noout -in domain_cert_10.10.13.182.pem 

- Make sure the Edgemarc's system time is in the validity range of the 
certificate.

- Edgemarc needs to have the following certificates
	1. CA certificate
	2. Its own certificate for the WAN interface and private key
	3. Certifacates of all the other edgemarcs that it communicate with.

- The file names of the certificates generated by makeCert have prefixes
  domain_cert_, domain_key_ and root_cert_. These prefixes cannot be 
  removed.





Type of encription used
------------------------
TLS_RSA_WITH_AES_256_CBC_SHA

RSA : certificate
AES : use AES in CBC 
256 : length of AES in bits
CBC : Cipher block chaining mode
SHA : use SHA-1 in HMAC

AES = Advanced Encryption Standard. AES has a fixed block size of 128 bits and
      a key size of 128, 192, or 256 bits. AES operates on a 4×4 array of
      bytes, termed the state.

CBC = In the cipher-block chaining (CBC) mode, each block of plaintext is
      XORed with the previous ciphertext block before being encrypted.

RSA = RSA involves a public key and a private key. The public key can be known
      to everyone and is used for encrypting messages. Messages encrypted with the
      public key can only be decrypted using the private key.

SHA = SHA-1 (as well as SHA-0) produces a 160-bit digest from a message with a
      maximum length of (264 − 1) bits and is based on principles similar to those
      used by Ronald L. Rivest of MIT in the design of the MD4 and MD5 message
      digest algorithms.
