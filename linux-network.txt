# ---------------------------------------------
# Diagnostic tools
# ---------------------------------------------
ping                |  Ping for IPv4        
ping6               |  Ping for IPv6       
traceroute -4       |  Traceroute for IPv4 
traceroute -6       |  Traceroute for IPv6 
arp -an             |  IPv4 arp table      
ip -6 neighbor show |  IPv6 ndp table      
nmap                |  Network port scanner


# Ping an address even if there is no route to it
arping -i eth3 11.100.1.134


# ----------------------
# ip address
# ----------------------

# show
ip a s 
ip a s up
ip a s label eth*

# add
ip a a 192.168.30.30 dev eth0

# del 
ip a d 192.168.20.1 dev eth0


# ----------------------
# ip route
# ----------------------

# show (fmly is -6 or -4, default:-4)
ip [fmly] r s
ip [fmly] r | column -t

# add
ip r a 192.168.20.0/24 dev eth0

# static throug a router
ip r a to <addr> via <router_addr> dev eth0

# default route (special prefix:"default" equivalent to ipv4 0/0 and ipv6 ::/0
ip r a default via <addr> dev eth1

# replace
ip r r 192.168.20.0/24 dev eth0 src 192.168.20.20

# routing rules
ip route list
ip route list all
ip route list table all
ip route list table 6



# ----------------------
# ip neighbor
# ----------------------

ip neigh add to <addr_of_neigh> dev eth1 lladdr <HW_addr_neigh> nud reachable


# ----------------------
# ip link
# ----------------------

# set
ip l set eth1 up

# show
ip l show



# -------------------------
# ip rule (policy routing)
# -------------------------

# see all tables
ip rule list

# view main table
ip route list table main

# add a new table called John
echo 200 John >> /etc/iproute2/rt_table
ip rule add from 10.0.0.10 table john

# rule for John's table
ip route add default via 195.96.98.253







# changing host name
# ------------------
hostname:
    hostnamectl set-hostname xps2.ewn
    
check:
     uname -n
     hostname
     cat /proc/sys/kernel/hostname
     cat /etc/hostname
     hostnamectl status





# netstat: listening services
# ---------------------------
states:
  netstat -tpna
  netstat -upna

protocol statistics:
  netstat -aps

routing table:
  netstat -r

interfaces:
  netstat -i 



# Interface tools
# ----------------
ethtool -p eth0 15  : Blink eth0 for 15 seconds
ethtool -S eth0 ... : Change setting on eth0

mii-tool eth0    # old tool

# List all interfaces
ls /sys/class/net

# configuring interfaces on ubuntu
/etc/network/interfaces

# restart all interfaces 
# For Servers:
sudo ifdown --exclude=lo -a && sudo ifup --exclude=lo -a
# For Desktops
sudo service network-manager restart


# vlans
# -----
# create vlan
ip link add link eth2 name eth0.5 type vlan id 30

# give vlan an ip
ip a a 192.168.2.1 dev eth0.5
ip r a 192.168.2.0/24 dev eth0.5

# turn up
ip link set eth0.5 up

# turn down
ip link set dev eth0.100 down

# delete
ip link delete eth0.100


# old method
vconfig add eth0 5 # create VLAN-ID 5 on eth0
vconfig rem eth0.5 # delete 

NTP
-----------
# configure
/etc/ntp.conf
# start
sudo /etc/init.d/ntp restart


# -------------------------------------------------------------
#                               DHCP 
# -------------------------------------------------------------


# Renew lease (EM)
killall dhcpcd

# renew lease (Fedora)
sudo dhclient -r eth2
sudo dhclient eth2


# ---                    --- #
# --- setting up dnsmasq --- #
# ---                    --- #

# config file: 
/etc/dnsmasq.conf
# dnsmasq directly uses the following files:
/etc/hosts
/etc/resolv.conf
/etc/dnsmasq.conf

# start (fedora)
sudo service dnsmasq restart
sudo chkconfig dnsmasq on

# Add all local hosts to /etc/hosts
192.168.1.12 xps 

# Add upstream dns servers to /etc/resolv.conf
nameserver 8.8.8.8

# Prevent NetworkManager from overwriting /etc/resolv.conf
# Add under [main] in /etc/NetworkManager/NetworkManager.conf
dns=none

# Make dsnmasq go to local server for local addresses
server=/ewn.local/10.10.22.31

# restart
service dnsmasq restart


#
# ----                         ---- #
# ---- Ubuntu Isc-dhcp-server  ---- #
# ----                         ---- #
#
# Note that currently, the ISC DHCP server can only serve IPv4 or IPv6, 
# means you have to start the daemon twice (for IPv6 with option “-6”) 
# to support both protocols.
# Resource: http://www.buntschu.ch/blog/?p=344

# config file: name is important because hard-coded in /etc/init/isc-dhcp-server
/etc/dhcp/dhcpd.conf  # for ipv4
/etc/dhcp/dhcpd6.conf # for ipv6

# select interfaces:
/etc/default/isc-dhcp-server

# create new startup script for ipv6
# add "-6" to dhcpd options in isc-dhcp6-server
# change dhcpd to dhcpd6
cp /etc/init.d/isc-dhcp-server /etc/init.d/isc-dhcp6-server
cp /etc/init/isc-dhcp-server.conf /etc/init/isc-dhcp6-server.conf
sudo systemctl daemon-reload

# Test config file
dhcpd -6 -d -cf /etc/dhcp/dhcpd6.conf -lf /var/lib/dhcp/dhcpd6.leases eth2
dhcpd -4 -d -cf /etc/dhcp/dhcpd.conf -lf /var/lib/dhcp/dhcpd.leases eth2

# Turn off apparmour because it creates problems with dhcpd.leases file
aa-complain dhcpd

# Start
sudo systemctl start isc-dhcp-server
sudo systemctl start isc-dhcp6-server

# Check status
systemctl status isc-dhcp-server.service
systemctl status isc-dhcp6-server.service

# Check leases
cat /var/lib/dhcp/dhcpd.leases
cat /var/lib/dhcp/dhcpd6.leases

# Troubleshooting
systemctl list-units --type=service
journalctl -xe
sudo cat /var/log/syslog



BIND
-------------
# configure named
/etc/bind/named.conf.options
/etc/bind/named.conf.local
/etc/bind/dp.voip.lab
# Start named (bind)
sudo /etc/init.d/bind9 restart


NTP
-------------
# configure
/etc/ntp.conf
# start (ubuntu)
/etc/init.d/ntp start



port forwarding
------------------
# 1. check if forwarding is enabled:
sysctl net.ipv4.conf.eth0.forwarding
cat /proc/sys/net/ipv4/ip_forward

# 2. Enable forwarding
sysctl -w net.ipv4.conf.eth0.forwarding=1
echo 1 > /proc/sys/net/ipv4/ip_forward

# 3. NAT rule 
iptables -t nat -A PREROUTING -p tcp  -d 192.168.1.250 --dport 8001 -j DNAT \
        --to 192.168.50.10:80

# 4. Filter rule (eth0+ = All interfaces with names begining with eth0)
iptables -I FORWARD 3 -p tcp -i eth0+ -o eth0+ --dport 80 -m state \
        --state NEW,ESTABLISHED,RELATED -j ACCEPT

# 5. NOTES: You may need a rule for https (port 443)
#    When traffic is forwarded by DNAT rule the source address is not changed.
#    For example B forwards the traffic to C
#    A ----> B ----> C
#    C will get packets with source address of A. If B is the default router for
#    C then it will send everything to B and B will forward them to A. If this is
#    not the case then we will need to tell C that the next-hop for sending packets
#    to A is B.
#



